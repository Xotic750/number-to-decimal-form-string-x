{"version":3,"sources":["webpack://numberToDecimalFormStringX/webpack/universalModuleDefinition","webpack://numberToDecimalFormStringX/webpack/bootstrap","webpack://numberToDecimalFormStringX/./node_modules/is-symbol/index.js","webpack://numberToDecimalFormStringX/./node_modules/has-symbols/index.js","webpack://numberToDecimalFormStringX/(webpack)/buildin/global.js","webpack://numberToDecimalFormStringX/./node_modules/has-symbols/shams.js","webpack://numberToDecimalFormStringX/../src/to-string-x.js","webpack://numberToDecimalFormStringX/../src/number-to-decimal-form-string-x.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD,O;QC1BA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFa;;AAEb;AACA,iBAAiB,mBAAO,CAAC,CAAa;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,SAAS,MAAK,IAAI,KAAK;AACvB;AACA;;;;;;;;AClCA,8CAAa;;AAEb;AACA,oBAAoB,mBAAO,CAAC,CAAS;;AAErC;AACA,wCAAwC,cAAc;AACtD,oCAAoC,cAAc;AAClD,6CAA6C,cAAc;AAC3D,yCAAyC,cAAc;;AAEvD;AACA;;;;;;;;ACZA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACnBa;;AAEb;AACA;AACA,0FAA0F,cAAc;AACxG,2CAA2C,aAAa;;AAExD;AACA;AACA;AACA,+BAA+B,cAAc;;AAE7C,iEAA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","file":"number-to-decimal-form-string-x.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"numberToDecimalFormStringX\"] = factory();\n\telse\n\t\troot[\"numberToDecimalFormStringX\"] = factory();\n})((function () {\n  'use strict';\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  return Function('return this')();\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","import isSymbol from 'is-symbol';\n\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a string';\nconst castString = ERROR_MESSAGE.constructor;\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} [value] - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n */\nconst ToString = function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return castString(value);\n};\n\nexport default ToString;\n","import toStr from 'to-string-x';\n\nconst castNumber = (0).constructor;\nconst emptyString = '';\nconst {charAt, slice, search, replace, indexOf} = emptyString;\nconst {join} = [];\nconst decimalMark = '.';\nconst hyphenMinus = '-';\nconst zeroSymbol = '0';\nconst minusZeroSymbol = '-0';\nconst isValid = /^-?(?:(?:\\d|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?$/i;\nconst {test} = isValid;\nconst errorMsg = 'not a valid base 10 numeric value';\n\n/**\n * This method converts a base-10 or scientific E-notation value to\n * a decimal form string. Javascript's IEE 754 double-precision numbers\n * give the same precision as `number.toString()`.\n *\n * @param {number|string} value - The value to be converted.\n * @throws {TypeError} If value is not a valid format.\n * @throws {TypeError} If value is a Symbol or not coercible.\n * @returns {string} The value converted to a decimal form string.\n */\nconst toDecimalFormString = function toDecimalFormString(value) {\n  let workingValue = value;\n\n  // Minus zero?\n  if (workingValue === 0 && 1 / workingValue < 0) {\n    workingValue = minusZeroSymbol;\n  } else {\n    workingValue = toStr(workingValue);\n\n    if (test.call(isValid, workingValue) === false) {\n      throw new TypeError(errorMsg);\n    }\n  }\n\n  // Determine sign.\n  let sign;\n\n  if (charAt.call(workingValue, 0) === hyphenMinus) {\n    workingValue = slice.call(workingValue, 1);\n    sign = -1;\n  } else {\n    sign = 1;\n  }\n\n  // Decimal point?\n  const pointIndex = indexOf.call(workingValue, decimalMark);\n\n  if (pointIndex > -1) {\n    workingValue = replace.call(workingValue, decimalMark, emptyString);\n  }\n\n  let exponentIndex = pointIndex;\n  // Exponential form?\n  let index = search.call(workingValue, /e/i);\n\n  if (index > 0) {\n    // Determine exponent.\n    if (exponentIndex < 0) {\n      exponentIndex = index;\n    }\n\n    exponentIndex += castNumber(slice.call(workingValue, index + 1));\n    workingValue = slice.call(workingValue, 0, index);\n  } else if (exponentIndex < 0) {\n    // Integer.\n    exponentIndex = workingValue.length;\n  }\n\n  let leadingZeroIndex = workingValue.length;\n  // Determine leading zeros.\n  index = 0;\n  while (index < leadingZeroIndex && charAt.call(workingValue, index) === zeroSymbol) {\n    index += 1;\n  }\n\n  let coefficient;\n  let exponent;\n\n  if (index === leadingZeroIndex) {\n    // Zero.\n    exponent = 0;\n    coefficient = [0];\n  } else {\n    // Determine trailing zeros.\n    if (leadingZeroIndex > 0) {\n      do {\n        leadingZeroIndex -= 1;\n      } while (charAt.call(workingValue, leadingZeroIndex) === zeroSymbol && leadingZeroIndex > 0);\n    }\n\n    exponent = exponentIndex - index - 1;\n    coefficient = [];\n    coefficient.length = leadingZeroIndex + 1;\n\n    // Convert string to array of digits without leading/trailing zeros.\n    let position = 0;\n    while (index <= leadingZeroIndex) {\n      coefficient[position] = castNumber(charAt.call(workingValue, index));\n      position += 1;\n      index += 1;\n    }\n  }\n\n  let decimalForm = join.call(coefficient, emptyString);\n  const decimalFormLength = decimalForm.length;\n\n  if (exponent < 0) {\n    exponent += 1;\n    while (exponent) {\n      decimalForm = zeroSymbol + decimalForm;\n      exponent += 1;\n    }\n\n    decimalForm = zeroSymbol + decimalMark + decimalForm;\n  } else if (exponent > 0) {\n    exponent += 1;\n\n    if (exponent > decimalFormLength) {\n      exponent -= decimalFormLength;\n      while (exponent) {\n        decimalForm += zeroSymbol;\n        exponent -= 1;\n      }\n    } else if (exponent < decimalFormLength) {\n      decimalForm = slice.call(decimalForm, 0, exponent) + decimalMark + slice.call(decimalForm, exponent);\n    }\n\n    // Exponent is zero.\n  } else if (decimalFormLength > 1) {\n    decimalForm = charAt.call(decimalForm, 0) + decimalMark + slice.call(decimalForm, 1);\n  }\n\n  return sign < 0 ? hyphenMinus + decimalForm : decimalForm;\n};\n\nexport default toDecimalFormString;\n"],"sourceRoot":""}