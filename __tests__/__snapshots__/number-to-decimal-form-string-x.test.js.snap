// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toDecimalFormString should throw for Symbol 1`] = `"Cannot convert a Symbol value to a string"`;

exports[`toDecimalFormString should throw for Symbol 2`] = `"Cannot convert a Symbol value to a string"`;

exports[`toDecimalFormString should throw if target is not coercible 1`] = `"Cannot convert object to primitive value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 1`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 2`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 3`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 4`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 5`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 6`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 7`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 8`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 9`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 10`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 11`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 12`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 13`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 14`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 15`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 16`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 17`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 18`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 19`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 20`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 21`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 22`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 23`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 24`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 25`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 26`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 27`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 28`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 29`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 30`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 31`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 32`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 33`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 34`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 35`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 36`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 37`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 38`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 39`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 40`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 41`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 42`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 43`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 44`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 45`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 46`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 47`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 48`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 49`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 50`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is not a valid base 10 or scientific E-notation value 51`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is null or undefined 1`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is null or undefined 2`] = `"not a valid base 10 numeric value"`;

exports[`toDecimalFormString should throw when target is null or undefined 3`] = `"not a valid base 10 numeric value"`;
